import{_ as f}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.UeO0aKI3.js";import"./chunks/pinia.BFamNAX0.js";import{e as g,u as y,a as S}from"./chunks/vue-router.CLlYW99z.js";import{a7 as b,an as t,X as v,a8 as c,am as i,af as l,ac as h,aj as e,Z as $}from"./framework.DIdR4KMW.js";import"./app.D31Dy1By.js";import"./chunks/dayjs.BdcnXKr1.js";import"./chunks/vue-i18n.C-hb0qar.js";/* empty css                    */import"./chunks/nprogress.B6x19dEb.js";import"./content.DZLhsl5J.js";import"./router.-rV2tM5K.js";const P=g("/posts/Unity粒子系统（1）",async r=>JSON.parse('{"title":"Unity粒子系统（1）","description":"","frontmatter":{"title":"Unity粒子系统（1）","date":"2023-12-20 22:04:18","categories":"学习","tags":["Unity"]},"headers":[],"relativePath":"pages/posts/Unity粒子系统（1）.md","lastUpdated":1761835150000}'),{lazy:(r,o)=>r.name===o.name}),D={__name:"Unity粒子系统（1）",setup(r,{expose:o}){const{data:u}=P(),m=S(),p=y(),s=Object.assign(p.meta.frontmatter||{},u.value?.frontmatter||{});return m.currentRoute.value.data=u.value,$("valaxy:frontmatter",s),globalThis.$frontmatter=s,o({frontmatter:{title:"Unity粒子系统（1）",date:"2023-12-20 22:04:18",categories:"学习",tags:["Unity"]}}),(a,n)=>{const d=f;return c(),b(d,{frontmatter:v(s)},{"main-content-md":t(()=>[n[0]||(n[0]=l("h1",{id:"一、粒子系统概述",tabindex:"-1"},[e("一、粒子系统概述 "),l("a",{class:"header-anchor",href:"#一、粒子系统概述","aria-label":'Permalink to "一、粒子系统概述"'},"​")],-1)),n[1]||(n[1]=l("p",null,"小型效果诸如击中特效，火焰特效等使用内置粒子系统即可，对于更加绚丽，需要粒子数量更多的，诸如雨雪天气，大爆炸之类的可酌情使用VFX（Visual Effect Graph粒子系统）。",-1)),h(" more "),n[2]||(n[2]=l("h1",{id:"二、粒子系统结构概述",tabindex:"-1"},[e("二、粒子系统结构概述 "),l("a",{class:"header-anchor",href:"#二、粒子系统结构概述","aria-label":'Permalink to "二、粒子系统结构概述"'},"​")],-1)),n[3]||(n[3]=l("p",null,"在Unity中，粒子系统是作为组件存在的即 Particle System 组件，Emission、Shape、Render三个模块是发射粒子的基础模块。",-1)),n[4]||(n[4]=l("h1",{id:"三、粒子系统模块概述",tabindex:"-1"},[e("三、粒子系统模块概述 "),l("a",{class:"header-anchor",href:"#三、粒子系统模块概述","aria-label":'Permalink to "三、粒子系统模块概述"'},"​")],-1)),n[5]||(n[5]=l("ul",null,[l("li",null,[l("p",null,"Mian：控制粒子初始状态，全局状态")]),l("li",null,[l("p",null,"Emission：控制粒子的发射速率、时间、波次")]),l("li",null,[l("p",null,"Shape：粒子的体积形状")]),l("li",null,[l("p",null,"Velocity over Lifetime：控制粒子在生命周期内的速度")]),l("li",null,[l("p",null,"Limit Velocity over Lifetime： 生命周期内 限制粒子的速度")]),l("li",null,[l("p",null,"Inherit Velocity：控制粒子的速度如何随着时间推移而受父物体移动的影响")]),l("li",null,[l("p",null,"Force over Lifetime：运用这个模块里面的指定力来对粒子产生影响")]),l("li",null,[l("p",null,"Color over Lifetime： 指定粒子颜色和透明度在生命周期内的变化")]),l("li",null,[l("p",null,"Color by Speed：粒子颜色随着速度的变化")]),l("li",null,[l("p",null,"Size over Lifetime：设置在生命周期内的大小")]),l("li",null,[l("p",null,"Size by Speed：设置大小随着速度的变化")]),l("li",null,[l("p",null,"Rotation over Lifetime：控制粒子在生命周期的旋转")]),l("li",null,[l("p",null,"Rotation by Speed：控制粒子旋转根据粒子速度的变化")]),l("li",null,[l("p",null,"External Forces：修改力场对于粒子的影响")]),l("li",null,[l("p",null,"Noise：给粒子添加湍流")]),l("li",null,[l("p",null,"Collision：控制粒子如何和其他物体碰撞")]),l("li",null,[l("p",null,"Triggers：控制粒子的触发")]),l("li",null,[l("p",null,"Sub Emitters： 在某粒子的生命周期的阶段创建附加粒子发射器")]),l("li",null,[l("p",null,"Texture Sheet Animation：控制动画帧进行播放")]),l("li",null,[l("p",null,"Lights：控制实时光照")]),l("li",null,[l("p",null,"Trails：控制轨迹（拖尾）")]),l("li",null,[l("p",null,"Custom Data： 在Editor中定义要附加到粒子的自定义数据格式")]),l("li",null,[l("p",null,"Renderer：设置粒子的图像或网格如何被其他粒子变换、着色和绘制")])],-1)),n[6]||(n[6]=l("h1",{id:"四、scene视图中的particle-effect面板",tabindex:"-1"},[e("四、Scene视图中的Particle Effect面板 "),l("a",{class:"header-anchor",href:"#四、scene视图中的particle-effect面板","aria-label":'Permalink to "四、Scene视图中的Particle Effect面板"'},"​")],-1)),n[7]||(n[7]=l("p",null,[e("左侧是我们刚刚创建的粒子，右侧是预览粒子的一些控制项（"),l("strong",null,"修改这些数值只会影响Scene窗口下的粒子显示效果，并不会影响实际粒子运行效果"),e("）")],-1)),n[8]||(n[8]=l("ul",null,[l("li",null,[l("p",null,[l("strong",null,"Pause"),e(" 暂停播放 | "),l("strong",null,"Restart"),e(" 重新播放 | "),l("strong",null,"Stop"),e(" 停止播放")])]),l("li",null,[l("p",null,[l("strong",null,"Playback Speed"),e(" 播放速度")])]),l("li",null,[l("p",null,[l("strong",null,"Playback Time"),e(" 粒子开始播放的累计时间，Restart重新播放可重置该值")])]),l("li",null,[l("p",null,[l("strong",null,"Particles"),e(" 当前存在的粒子数量")])]),l("li",null,[l("p",null,[l("strong",null,"Speed Range"),e(),l("strong",null,"暂无解释")])]),l("li",null,[l("p",null,[l("strong",null,"Simulate Layers"),e(" 一般情况下，Scene场景中只会播放你选中的粒子特效，如果你想要让场景中所有的粒子特效或者个别粒子特效播放，就需要选择相应的层级，或者是Everything（全都播放）")])]),l("li",null,[l("p",null,[l("strong",null,"Resimulate"),e(" 若启用，粒子系统会立即将属性更改立刻应用于已生成的粒子；若禁用，仅将属性更改应用于新生成的粒子。（仅在Scene窗口预览模式下生效）")])]),l("li",null,[l("p",null,[l("strong",null,"Show Bounds"),e(" 显示包围体积")])]),l("li",null,[l("p",null,[l("strong",null,"Show Only Selected"),e(" 隐藏所有未选中的粒子特效")])])],-1)),n[9]||(n[9]=l("h1",{id:"五、粒子显示紫色",tabindex:"-1"},[e("五、粒子显示紫色 "),l("a",{class:"header-anchor",href:"#五、粒子显示紫色","aria-label":'Permalink to "五、粒子显示紫色"'},"​")],-1)),n[10]||(n[10]=l("p",null,"因为Unity的bug，粒子显示紫色是因为粒子的材质丢失，是Unity没有默认给粒子赋予材质的原因，在Render模块里面赋予材质即可解决",-1))]),"main-header":t(()=>[i(a.$slots,"main-header")]),"main-header-after":t(()=>[i(a.$slots,"main-header-after")]),"main-nav":t(()=>[i(a.$slots,"main-nav")]),"main-content-before":t(()=>[i(a.$slots,"main-content-before")]),"main-content":t(()=>[i(a.$slots,"main-content")]),"main-content-after":t(()=>[i(a.$slots,"main-content-after")]),"main-nav-before":t(()=>[i(a.$slots,"main-nav-before")]),"main-nav-after":t(()=>[i(a.$slots,"main-nav-after")]),comment:t(()=>[i(a.$slots,"comment")]),footer:t(()=>[i(a.$slots,"footer")]),aside:t(()=>[i(a.$slots,"aside")]),"aside-custom":t(()=>[i(a.$slots,"aside-custom")]),default:t(()=>[i(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{D as default,P as usePageData};
