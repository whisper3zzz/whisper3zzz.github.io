import{_ as g}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.UeO0aKI3.js";import"./chunks/pinia.BFamNAX0.js";import{e as y,u as o,a as F}from"./chunks/vue-router.CLlYW99z.js";import{a7 as u,an as a,X as A,a8 as c,am as k,af as i,ac as D,aj as l,Z as C}from"./framework.DIdR4KMW.js";import"./app.D31Dy1By.js";import"./chunks/dayjs.BdcnXKr1.js";import"./chunks/vue-i18n.C-hb0qar.js";/* empty css                    */import"./chunks/nprogress.B6x19dEb.js";import"./content.DZLhsl5J.js";import"./router.-rV2tM5K.js";const b="/assets/C-%E8%BF%9B%E9%98%B6_%E5%A0%86%E5%92%8C%E6%A0%88.CF4XkId9.jpg",m=y("/posts/C-进阶/C-进阶",async n=>JSON.parse('{"title":"C#进阶","description":"","frontmatter":{"title":"C#进阶","date":"2024-02-14 18:36:04","categories":"学习","tags":["C#"],"toc":true},"headers":[],"relativePath":"pages/posts/C-进阶/C-进阶.md","lastUpdated":1761835150000}'),{lazy:(n,h)=>n.name===h.name}),R={__name:"C-进阶",setup(n,{expose:h}){const{data:p}=m(),r=F(),E=o(),e=Object.assign(E.meta.frontmatter||{},p.value?.frontmatter||{});return r.currentRoute.value.data=p.value,C("valaxy:frontmatter",e),globalThis.$frontmatter=e,h({frontmatter:{title:"C#进阶",date:"2024-02-14 18:36:04",categories:"学习",tags:["C#"],toc:!0}}),(t,s)=>{const d=g;return c(),u(d,{frontmatter:A(e)},{"main-content-md":a(()=>[s[0]||(s[0]=i("p",null,"一些高级语法",-1)),D(" more "),s[1]||(s[1]=i("h2",{id:"堆和栈",tabindex:"-1"},[l("堆和栈 "),i("a",{class:"header-anchor",href:"#堆和栈","aria-label":'Permalink to "堆和栈"'},"​")],-1)),s[2]||(s[2]=i("figure",null,[i("img",{src:b,alt:"",loading:"lazy",decoding:"async"})],-1)),s[3]||(s[3]=i("p",null,"栈（Stack）是一块较小的区域，其大小是固定的，一般在1-2MB之间。其中主要存储 本地变量。栈的访问速度非常快。",-1)),s[4]||(s[4]=i("p",null,"堆（Heap）是一块较大的区域，其中主要储存我们用new关键字创建出的类的实例。 它的大小是随着我们的使用不断增长的，最大可达到绝大部分进程可用内存。但是 堆的访问相较栈要慢很多。",-1)),s[5]||(s[5]=i("h2",{id:"值类型-value-type",tabindex:"-1"},[l("值类型 Value Type "),i("a",{class:"header-anchor",href:"#值类型-value-type","aria-label":'Permalink to "值类型 Value Type"'},"​")],-1)),s[6]||(s[6]=i("p",null,"在C#中，数据类型分为两大类：值类型（value type）和引用类型（reference type）。 它们的区别主要在数据的存储方式与变量之间的数据传递方式：",-1)),s[7]||(s[7]=i("p",null,"值类型直接存储数据，并且变量之间是通过拷贝的方式传递的。",-1)),s[8]||(s[8]=i("p",null,"比如int是值类型，那么考虑以下的代码：",-1)),s[9]||(s[9]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"7"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," b"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"a;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"b"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=-"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[10]||(s[10]=i("p",null,"很明显，通过修改b的值是不能影响到a的值的。（尽管我们写了int b = a） 这是因为a这个变量中直接存储了‘7’这个数据，而b = a实际上是把a中的值拷贝了一份再复制给b的。所以b和a没有直接的联系。",-1)),s[11]||(s[11]=i("p",null,[i("strong",null,"值类型的数据是存储在栈（Stack）上的！")],-1)),s[12]||(s[12]=i("p",null,[i("em",null,"常见的值类型有：所有的基本数据类型(int, float, double, bool, long, char, etc.)、枚举类型（enum）、结构体（struct）")],-1)),s[13]||(s[13]=i("h2",{id:"引用类型-reference-type",tabindex:"-1"},[l("引用类型 Reference Type "),i("a",{class:"header-anchor",href:"#引用类型-reference-type","aria-label":'Permalink to "引用类型 Reference Type"'},"​")],-1)),s[14]||(s[14]=i("p",null,"引用类型与值类型很不同，它并非直接存储数据本身，而是存储了指向该数据的地址。 引用类型的变量之间传递数据时只是拷贝了其地址，并没有拷贝数据本身。所以自始至终只会有一份数据。",-1)),s[15]||(s[15]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//Transform是引用类型，考虑以下代码：")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Transform"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," tf1"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," object1.transform; ")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Transform"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," tf2"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tf1;")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tf2.position "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Vector3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//我们通过修改tf2的position会影响到object1的位置吗？会！")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这是因为tf1和tf2中只存储了指向object1.transform的地址。tf2=tf1这行代码仅拷贝了地址，并没有拷贝object1.transform本身，所以tf2和tf1指向的是同一个物体。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[16]||(s[16]=i("p",null,[i("strong",null,"引用类型本身是存储在栈（Stack）上的，而引用类型所指向的数据是存储在堆（Heap）上的!")],-1)),s[17]||(s[17]=i("p",null,"所有的引用类型都继承自System.Object类。",-1)),s[18]||(s[18]=i("p",null,[i("em",null,"常见的引用类型有：类（class）、字符串（string）、数组（与数组的元素类型无关）、委托（delegate）")],-1)),s[19]||(s[19]=i("h2",{id:"c-中的string",tabindex:"-1"},[l("C#中的string "),i("a",{class:"header-anchor",href:"#c-中的string","aria-label":'Permalink to "C#中的string"'},"​")],-1)),s[20]||(s[20]=i("p",null,"string是一种引用类型，但它有许多特别之处，使得它有时会显得和值类型很像。",-1)),s[21]||(s[21]=i("h3",{id:"不变性-immutability",tabindex:"-1"},[l("不变性（Immutability） "),i("a",{class:"header-anchor",href:"#不变性-immutability","aria-label":'Permalink to "不变性（Immutability）"'},"​")],-1)),s[22]||(s[22]=i("p",null,"C#中的string是不变的。这意味着当一个string被创建时，它就永远不能被改变了。而我们对string进行的任何修改操作其实都 是创建了一个新的字符串变量。",-1)),s[23]||(s[23]=i("p",null,"比如string s = “123”; s+=“4”; 我们其实创建了两个string：”123” 和 ”1234”。s这个变量最后指向的是”1234”，而一开始 的”123”这个字符串就变成了“垃圾”。",-1)),s[24]||(s[24]=i("h3",{id:"string-interning",tabindex:"-1"},[l("String Interning "),i("a",{class:"header-anchor",href:"#string-interning","aria-label":'Permalink to "String Interning"'},"​")],-1)),s[25]||(s[25]=i("p",null,"当我们频繁地引用一个内容相同的字符串时（比如在Update里写string s = “a”），难道系统会需要不断创建新的字符串吗？",-1)),s[26]||(s[26]=i("p",null,"这 未免有些浪费了。 于是，C#内置了string interning机制。",-1)),s[27]||(s[27]=i("p",null,"它很像一个“字符串池”，当我们想要引用一个字符串时，如果池中已经有内容相同的字 符串，我们可以直接访问该已存在的字符串，不需要创建新的字符串。",-1)),s[28]||(s[28]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," str1"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Hello"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," str2"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Hello"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"bool"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," areEqual"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Object."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ReferenceEquals"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(str1, str2);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//areEqual为true！")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[29]||(s[29]=i("h2",{id:"ref-关键字",tabindex:"-1"},[l("ref 关键字 "),i("a",{class:"header-anchor",href:"#ref-关键字","aria-label":'Permalink to "ref 关键字"'},"​")],-1)),s[30]||(s[30]=i("p",null,"C#中函数的参数可以被ref关键字修饰。它允许我们在传参时使用变量的引用，而非变量的值。",-1)),s[31]||(s[31]=i("p",null,[i("em",null,"（一般来说，我们向函数中传参数时都是复制了一份变量的值并传入的。这也是为什么函数内的变量通常和函数外的变量没关系。）")],-1)),s[32]||(s[32]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AddOne"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(a);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"print"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(a); "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// a=1")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"……")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddOne"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//参数“a”是通过值传递的，和函数外的“a”完全没关系。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[33]||(s[33]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AddOne"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"ref"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," a);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"print"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(a); "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// a=2")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"……")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddOne"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"ref"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//有了ref关键字后，参数“a”是通过引用传递的。于是函数内的“a”和函数外的“a”是一个东西了。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[34]||(s[34]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," s"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," “"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"123"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"”;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Append"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"ref"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," s);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"print"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(s); "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// s=“123a”")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"……")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Append"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"ref"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," s"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	s"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"“a”;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//同样，这里函数内外的“s”也都是同一个东西了。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[35]||(s[35]=i("h2",{id:"装箱与拆箱",tabindex:"-1"},[l("装箱与拆箱 "),i("a",{class:"header-anchor",href:"#装箱与拆箱","aria-label":'Permalink to "装箱与拆箱"'},"​")],-1)),s[36]||(s[36]=i("p",null,"装箱（boxing）：从值类型转换到引用类型；拆箱（unboxing）：从引用类型转换到值类型。",-1)),s[37]||(s[37]=i("p",null,"这是一个性能消耗较大的操作，应尽可能减少。",-1)),s[38]||(s[38]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//装箱")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 7"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"object"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," o"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," a;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//拆箱")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"object"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," o"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 42"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," o;")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[39]||(s[39]=i("h2",{id:"gc-垃圾回收机制",tabindex:"-1"},[l("GC：垃圾回收机制 "),i("a",{class:"header-anchor",href:"#gc-垃圾回收机制","aria-label":'Permalink to "GC：垃圾回收机制"'},"​")],-1)),s[40]||(s[40]=i("p",null,"我们一直在用new来在堆上创建新的物体，但从来不需要主动删除物体。难道内存一直会越来越挤，直到被用完吗？ 当然不！",-1)),s[41]||(s[41]=i("p",null,"为此，C#提供了垃圾回收器（Garbage Collector）来帮助我们清理不需要的内存。",-1)),s[42]||(s[42]=i("p",null,"堆中的内存是分为3个Generation的！",-1)),s[43]||(s[43]=i("p",null,"Generation 0：主要为临时变量、刚刚被创建的（较小的）类的实例。这里的清理频率是最高的。",-1)),s[44]||(s[44]=i("p",null,"Generation 1：这是一个缓冲区，从gen0中“存活下来”的物体会被放入gen1。（这说明它们更常被使用）",-1)),s[45]||(s[45]=i("p",null,"Generation 2：从gen1中“存活下来”的物体会被放入gen2。这里主要为长期需要的变量（static变量等），清理的频率最低。",-1)),s[46]||(s[46]=i("p",null,"当第k个generation被GC清理时，所有小于k的generation也都会被一并清理。 所以当GC清理gen2的时候可以被认为是一个“完整的垃圾回收”。",-1)),s[47]||(s[47]=i("p",null,"一次垃圾清理分为三个阶段。",-1)),s[48]||(s[48]=i("ol",null,[i("li",null,[i("p",null,"标记阶段（Marking Phase） 在这个阶段，GC会找出并标记所有仍被引用的物体。（也就是说我们依然在使用它们）"),i("p",null,"这是通过一个“引用树”（Reference Tree）实现的：每一个引用类型的数据都“继承”自一个根节点，而这些物体之间的引 用关系构成了一个树状结构。")])],-1)),s[49]||(s[49]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Mark"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"objectRef"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," o"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"!"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InUseList."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Exists"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(o))")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		InUseList."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(o);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"		List"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," refs"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," GetAllChildReferences"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(o);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"		foreach"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"objectRef"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," childRef"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," in"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," refs)")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"			Mark"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(childRef);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//可以看到，这是一个递归的操作。我们可以从根节点开始逐渐探索到整个树状结构并将探索到的物体标记为“被使用”。")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这样，GC就成功找出了所有正在被使用的物体。它们将很幸运地活下来")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[50]||(s[50]=i("ol",{start:"2"},[i("li",null,[i("p",null,"回收阶段（Collection Phase） 在这个阶段，GC会从内存中“删除”所有未被引用的物体。（也就是我们上一步没发现的物体）"),i("p",null,"所谓“删除”，其实并不是真正地抹去数据。实际要简单得多：只需要将该物体所在的内存区域标记为“未使用”就可以了， 这样我们就可以继续使用这块内存做别的事情了。（原来的数据是一直存在的！）")]),i("li",null,[i("p",null,"压缩阶段（Compacting Phase） 经历过回收阶段的清洗之后，内存中会出现许多空隙（因为我们“删除”了许多物体）。在这个阶段，GC会把存活下来的 物体重新排列，使得它们都“沉到堆底”，从而最小化内存中的空洞。这个过程中物体之间的相对排列顺序是不变的。 到此为止，一次完整的垃圾回收就完成啦！"),i("p",null,"那么，什么时候GC会被触发呢？"),i("p",null,"（1）当可用内存快满时，或内存占用超过GC所设定的某个阈值时"),i("p",null,"（2）当我们手动调用GC.Alloc()方法"),i("p",null,"C#中的垃圾回收存在使得我们永远不会为手动清理内存而烦恼，但是因为GC清理是很耗性能的过程，我们需要谨慎地“生产垃圾”。")])],-1)),s[51]||(s[51]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," s"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," i"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1000"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"“a”;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这段代码会产出非常多的垃圾")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[52]||(s[52]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; i "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," mesh.vertices.Length; i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"z"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	x "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," mesh.vertices[i].x;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	y "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," mesh.vertices[i].y;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	z "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," mesh.vertices[i].z;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这段代码也会产出非常多的垃圾。")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这是因为mesh是一个Unity类，vertices是其中的一个数组。Unity类在每次被访问其中的数组时，都会拷贝一份新的数组给使用者。")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//所以代码生产了4份vertices数组。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[53]||(s[53]=i("h2",{id:"c-、mono-、-net",tabindex:"-1"},[l("C# 、Mono 、.NET "),i("a",{class:"header-anchor",href:"#c-、mono-、-net","aria-label":'Permalink to "C# 、Mono 、.NET"'},"​")],-1)),s[54]||(s[54]=i("p",null,".NET是一个微软为Windows推出的程序开发框架。",-1)),s[55]||(s[55]=i("p",null,"它包含了许多常用的类库和一个称为“Common Language Runtime”（CLR） 的运行环境；CLR提供了将C#代码翻译成机器指令的功能、内存管理功能（包括GC）、多线程功能等等。",-1)),s[56]||(s[56]=i("p",null,"粗略地说，我们把写好的代码一口气丢给.NET处理就可以了。",-1)),s[57]||(s[57]=i("p",null,".NET虽然很强大，但其主要是运行在Windows上的。于是，为了将.NET适配到多个操作系统，Mono诞生了。",-1)),s[58]||(s[58]=i("p",null,"Mono是.NET的一 种多平台实现，或者说是“另外一个.NET的版本”。",-1)),s[59]||(s[59]=i("p",null,"Mono包含了：C#编译器、Mono Runtime（和CLR类似）、.NET类库和Mono 类库。",-1)),s[60]||(s[60]=i("p",null,"C#是一门用来开发基于.NET框架的软件的编程语言。（Windows：.NET本体；其他平台：Mono）",-1)),s[61]||(s[61]=i("p",null,"Unity作为一个多平台游戏引擎，自然需要Mono的多平台特性。 这也解释了“MonoBahaviour”这个名字的由来：“Mono”指Mono Runtime、“Behaviour”指“物体行为”。所以MonoBehaviour就是 “基于Mono Runtime的物体行为脚本”。",-1)),s[62]||(s[62]=i("p",null,"与大多数编程语言一样，一段C#代码需要通过层层的步骤才能转化为电脑能读懂的机器指令。",-1)),s[63]||(s[63]=i("ol",null,[i("li",null,"C#代码 这是最高层的，人类易懂的语言。"),i("li",null,"IL/CIL（Common Intermediate Language，中间语言） 当我们编译C#代码时，编译器会将其转换为跨平台的IL代码。（Windows：.exe）"),i("li",null,"机器码（Machine Code） 当我们运行编译好的程序时，CLR会让一个叫做JIT（Just In Time）的编译器将 IL代码编译成当前平台的机器码。这是最底层的，直接被电脑执行的代码。")],-1)),s[64]||(s[64]=i("h2",{id:"泛型-generics",tabindex:"-1"},[l("泛型 Generics "),i("a",{class:"header-anchor",href:"#泛型-generics","aria-label":'Permalink to "泛型 Generics"'},"​")],-1)),s[65]||(s[65]=i("p",null,"泛型允许一个函数或类接受一些类型作为参数。",-1)),s[66]||(s[66]=i("h3",{id:"泛型方法-generic-methods",tabindex:"-1"},[l("泛型方法 Generic Methods "),i("a",{class:"header-anchor",href:"#泛型方法-generic-methods","aria-label":'Permalink to "泛型方法 Generic Methods"'},"​")],-1)),s[67]||(s[67]=i("p",null,"首先我们来看看泛型在函数/方法上的用途。 在定义一个函数时，我们不仅用圆括号()标记所接受的变量参数，还可以用尖括号<>标记接受的类型参数。",-1)),s[68]||(s[68]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//非泛型函数")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"b;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddGeneric"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//泛型函数")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"b;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[69]||(s[69]=i("p",null,"这里我们接受了一个类型变量”T”。”T”这个名字是自选的，不过一般的惯例是命名为”T”（Type）。这样，a和b两个参数的类型都是T了。",-1)),s[70]||(s[70]=i("p",null,[l("在调用泛型函数的时候，我们需要补充尖括号中的内容："),i("code",null,"float sum = AddGeneric<float>(5f, 7f);"),l("或者使用简写"),i("code",null,"float sum = AddGeneric(5f, 7f);")],-1)),s[71]||(s[71]=i("p",null,"泛型方法可以接受多个类型变量。我们在定义时需要用逗号隔开：",-1)),s[72]||(s[72]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Insert"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TKey"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TValue"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Dictionary"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TKey"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TValue"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dict"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TKey"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," key"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"TValue"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," value"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	dict."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(key, value);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[73]||(s[73]=i("p",null,[l("调用时："),i("code",null,"Insert(dict, 2, “February”);"),l("或"),i("code",null,"Insert(dict, 2, “February”);")],-1)),s[74]||(s[74]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//现在，我们可以大概推断出Unity的GetComponent方法大概是怎么被定义的了：")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," GetComponent"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">()")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," comp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	……")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," comp;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//不过GetComponent会接受所有类型的类型参数吗？可以Get一个int类型的Component吗？")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[75]||(s[75]=i("h3",{id:"泛型的类型限制",tabindex:"-1"},[l("泛型的类型限制 "),i("a",{class:"header-anchor",href:"#泛型的类型限制","aria-label":'Permalink to "泛型的类型限制"'},"​")],-1)),s[76]||(s[76]=i("p",null,"有时我们会希望一个函数所接受的泛型变量处于某个范围之内，比如GetComponent方法只会接受Component类型的参数。",-1)),s[77]||(s[77]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddGeneric"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," a"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"b;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//事实上，这个函数在编译器里面是会报错的，因为“+”这个运算符，并没有在所有类型中都有定义")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[78]||(s[78]=i("p",null,"为了解决这个问题，我们可以在圆括号后使用where关键字对类型变量作出一些限制:",-1)),s[79]||(s[79]=i("ul",null,[i("li",null,[i("code",null,"where T: struct (T必须为值类型)")]),i("li",null,[i("code",null,"where T : class (T必须为引用类型)")]),i("li",null,[i("code",null,"where T : new() (T必须有一个无参数的构造函数) ")]),i("li",null,[i("code",null,"where T :<base class name> (T是继承自一个基类的) ")]),i("li",null,[i("code",null,"where T :<interface name> (T实现了一个接口)")])],-1)),s[80]||(s[80]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," GetComponent"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">() "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"where"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Component"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," //其实就是使用继承来限制")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," comp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	……")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," comp;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[81]||(s[81]=i("h3",{id:"泛型类-generic-classes",tabindex:"-1"},[l("泛型类 Generic Classes "),i("a",{class:"header-anchor",href:"#泛型类-generic-classes","aria-label":'Permalink to "泛型类 Generic Classes"'},"​")],-1)),s[82]||(s[82]=i("p",null,"一个泛型类允许我们在创建该类的实例时传入一个类型参数。",-1)),s[83]||(s[83]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyList"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"where"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"struct")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	List"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"list"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," List"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">();")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," item"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		list."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(item);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这是一个接受值类型的List类。在类名的定义之后添加尖括号（以及类型限制）即可。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[84]||(s[84]=i("h2",{id:"coroutine-协程",tabindex:"-1"},[l("Coroutine 协程 "),i("a",{class:"header-anchor",href:"#coroutine-协程","aria-label":'Permalink to "Coroutine 协程"'},"​")],-1)),s[85]||(s[85]=i("p",null,"协程是一个函数；定义如下：",-1)),s[86]||(s[86]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IEnumerator"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," <"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FuncName"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Params"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"     <"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"content"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," } ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//即把一个函数的返回值改为“IEnumerator”即可")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IEnumerator"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyCoroutine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," f"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	f "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[87]||(s[87]=i("p",null,"调用协程函数：",-1)),s[88]||(s[88]=i("p",null,[i("code",null,"StartCoroutine(IEnumerator routine);")],-1)),s[89]||(s[89]=i("p",null,"不可以直接视作函数调用",-1)),s[90]||(s[90]=i("h3",{id:"协程系统还有一个很重要的组成部分-yield",tabindex:"-1"},[l("协程系统还有一个很重要的组成部分：yield "),i("a",{class:"header-anchor",href:"#协程系统还有一个很重要的组成部分-yield","aria-label":'Permalink to "协程系统还有一个很重要的组成部分：yield"'},"​")],-1)),s[91]||(s[91]=i("ul",null,[i("li",null,[i("p",null,"yield关键字的作用是将一个协程暂停，并在下一帧继续执行")]),i("li",null,[i("p",null,"yield通常搭配return使用：yield return xxx")]),i("li",null,[i("p",null,"常用结构："),i("ul",null,[i("li",null,"yield return null：下一帧继续执行协程"),i("li",null,"yield return new WaitForSeconds(i)：在i秒后继续执行")]),i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IEnumerator"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," DisableAfterTwoSec"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"yield"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," WaitForSeconds"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gameObject."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SetActive"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IEnumerator"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyUpdate"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"while"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    DoSomething"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    yield"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," null"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这个函数的功能和Unity自带的Update（）函数是一样的")])])]),i("button",{class:"code-block-unfold-btn"})])])],-1)),s[92]||(s[92]=i("h3",{id:"关于waitforseconds",tabindex:"-1"},[l("关于WaitForSeconds "),i("a",{class:"header-anchor",href:"#关于waitforseconds","aria-label":'Permalink to "关于WaitForSeconds"'},"​")],-1)),s[93]||(s[93]=i("p",null,"注意WaitForSeconds是一个类！（使用new WaitForSeconds()来构造实例）",-1)),s[94]||(s[94]=i("p",null,"好习惯：如果在循环中多次等待同一段时间，最好先建立WaitForSeconds实例 再使用，而不是在循环中不断new。",-1)),s[95]||(s[95]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"WaitForSeconds"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," w1"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," WaitForSeconds"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"while"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	yield"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," w1; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[96]||(s[96]=i("h2",{id:"action与func",tabindex:"-1"},[l("Action与Func "),i("a",{class:"header-anchor",href:"#action与func","aria-label":'Permalink to "Action与Func"'},"​")],-1)),s[97]||(s[97]=i("p",null,"C#中的事件系统中有两个常用的组件：Action和Func。可以把它们想象成存储了许多函 数的List。当一个Action/Func执行时，其中所有的函数都会一起执行。",-1)),s[98]||(s[98]=i("p",null,"Action/Func是一个类型，我们可以定义类型为Action/Func的变量并用它来存放函数。",-1)),s[99]||(s[99]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Action"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," onPlayerInjure"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Start"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	onPlayerInjure"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"ScreenFlash;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[100]||(s[100]=i("h3",{id:"action-常用操作",tabindex:"-1"},[l("Action：常用操作 "),i("a",{class:"header-anchor",href:"#action-常用操作","aria-label":'Permalink to "Action：常用操作"'},"​")],-1)),s[101]||(s[101]=i("p",null,"Action位于namespace System中 ,它能够存放的函数必须是无返回值的(也就是void函数）",-1)),s[102]||(s[102]=i("p",null,"有关的常用操作有这些：",-1)),s[103]||(s[103]=i("ol",null,[i("li",null,[i("p",null,"向一个Action中添加一个函数：“+=”"),i("p",null,[l("比如："),i("code",null,"onDamage+=ScreenFlash；"),l("注意，+=右侧的值为想要添加的函数名")])]),i("li",null,[i("p",null,"从一个Action中删除一个函数：“-=”")])],-1)),s[104]||(s[104]=i("p",null,[l("比如："),i("code",null,"onDamage-=UpdateHPBar；")],-1)),s[105]||(s[105]=i("ol",{start:"3"},[i("li",null,[i("p",null,"调用一个Action中所有的函数：把它当作一个函数来用即可"),i("p",null,[l("比如："),i("code",null,"onDamage()；")])])],-1)),s[106]||(s[106]=i("h3",{id:"action-有参数的函数",tabindex:"-1"},[l("Action：有参数的函数 "),i("a",{class:"header-anchor",href:"#action-有参数的函数","aria-label":'Permalink to "Action：有参数的函数"'},"​")],-1)),s[107]||(s[107]=i("p",null,"Action够存放的函数必须是无返回值的，但是可以有参数！",-1)),s[108]||(s[108]=i("p",null,"每个Action类型的变量中的函数的参数必须都是相同的。",-1)),s[109]||(s[109]=i("p",null,[l("比如"),i("code",null,"void A(int a) void B(float b) void C(float c)"),l(" , 则B和C可以放在同个Action里，而A不行")],-1)),s[110]||(s[110]=i("p",null,[l("定义一个有参数的"),i("code",null,"Action：Action<参数1类型，参数2类型，……>")],-1)),s[111]||(s[111]=i("p",null,[l("比如："),i("code",null,"private Action onDamage;"),l(", 这代表"),i("code",null,"onDamage"),l("中的函数都是接受一个float类型的参数，且无返回值的函数")],-1)),s[112]||(s[112]=i("p",null,[l("使用它的时候就可以传入一个参数了: "),i("code",null,"onDamage(45.2f);")],-1)),s[113]||(s[113]=i("h3",{id:"func-有返回值的函数",tabindex:"-1"},[l("Func：有返回值的函数 "),i("a",{class:"header-anchor",href:"#func-有返回值的函数","aria-label":'Permalink to "Func：有返回值的函数"'},"​")],-1)),s[114]||(s[114]=i("p",null,"Action可以用来存放void函数，那如果想要存放有返回值的函数怎么办？",-1)),s[115]||(s[115]=i("p",null,"这时就需要Func了！ - Func和Action是同一“家族”的，而它们唯一的区别就是有无返回值。",-1)),s[116]||(s[116]=i("p",null,"在定义Func的时候，需要在所有参数之后加上返回值的类型：",-1)),s[117]||(s[117]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Func"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"func1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//func1中的函数接受1个int类型的变量，并返回float")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Func"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"func2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//func2中的函数不接受变量，返回string")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Func"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"func3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//func3中的函数接受2个int类型的变量，并返回int ")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Func"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," func4"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//func4会报错")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[118]||(s[118]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 使用Func的时候，当一个普通的有返回值的函数即可")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Func"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"···")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," sum"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"4"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[119]||(s[119]=i("h2",{id:"委托-delegate",tabindex:"-1"},[l("委托 Delegate "),i("a",{class:"header-anchor",href:"#委托-delegate","aria-label":'Permalink to "委托 Delegate"'},"​")],-1)),s[120]||(s[120]=i("p",null,"Action和Func背后隐藏着一个强大的机制：委托。委托提供的功能正是“可以存放函数的类型”。",-1)),s[121]||(s[121]=i("p",null,[i("code",null,"delegate int Calculate(int x, int y);")],-1)),s[122]||(s[122]=i("p",null,"这样，我们就定义了一个委托类型。这个类型的变量中可以存放返回值为int且接受两个int参数的函数。",-1)),s[123]||(s[123]=i("p",null,[i("code",null," delegate <返回值类型> <委托类型名>(<参数列表>);")],-1)),s[124]||(s[124]=i("p",null,"这是通用的模板。",-1)),s[125]||(s[125]=i("p",null,"上方我们只是定义了一个类型。当我们想要使用委托时，需要声明一个该类型的变量。",-1)),s[126]||(s[126]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Calculate"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," cal"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//声明委托类型的变量")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"cal "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," AddInt; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//将AddInt函数装进变量")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," sum"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," cal"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"6"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"7"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//使用委托")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddInt"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," x"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddFloat"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," x"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[127]||(s[127]=i("h3",{id:"多播委托-multicasting",tabindex:"-1"},[l("多播委托 Multicasting "),i("a",{class:"header-anchor",href:"#多播委托-multicasting","aria-label":'Permalink to "多播委托 Multicasting"'},"​")],-1)),s[128]||(s[128]=i("p",null,"一个委托变量中也可以存储/调用多个函数。这叫做Multicasting。",-1)),s[129]||(s[129]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Calculate"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," cal"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"cal "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," AddInt; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//我们可以使用+=运算符向委托变量中添加函数，")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"cal "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," MinusInt;"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//同样可以使用-=运算符除去函数。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[130]||(s[130]=i("p",null,"当一个装有多个函数的委托变量被调用时，其中的函数会被依次调用，且：",-1)),s[131]||(s[131]=i("ol",null,[i("li",null,"如果参数中有引用类型的变量，该变量会依次受到这些函数的影响。"),i("li",null,"如果函数有返回值，则最终返回最后一个函数的返回值。")],-1)),s[132]||(s[132]=i("p",null,[l("一个委托类型中的函数们叫做调用列表（Invocation List）。我们可以通过"),i("code",null,"GetInvocationList()"),l("获取它：")],-1)),s[133]||(s[133]=i("p",null,[i("code",null,"cal.GetInvocationList();")],-1)),s[134]||(s[134]=i("p",null,[i("code",null,"cal.GetInvocationList().Length;"),l(" 这样可以获取其中函数的数量。")],-1)),s[135]||(s[135]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"delegate"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Calculate"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Main"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	Calculate"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," cal"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," null"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	cal"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Add; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	cal"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Add; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," sum"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," cal"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	Console."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"WriteLine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(sum); ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"} ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Add"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," x"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y; ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//output:2")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[136]||(s[136]=i("h3",{id:"事件-event",tabindex:"-1"},[l("事件 Event "),i("a",{class:"header-anchor",href:"#事件-event","aria-label":'Permalink to "事件 Event"'},"​")],-1)),s[137]||(s[137]=i("p",null,"事件（event）是对委托的一层封装。它允许我们更方便地在不同的类之间“发送提醒”。",-1)),s[138]||(s[138]=i("p",null,"粗略地看，事件就是一个仅支持“+=”和“-=”的委托。这么做禁止了“=”，也就是不可以直接修改该委托的invocation list。 我们可以用event关键字修饰一个委托变量来将其变成事件变量。用法与委托大体一致。",-1)),s[139]||(s[139]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," delegate"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyDelegate"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," message"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," event "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"MyDelegate"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyEvent"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"…")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"MyEvent"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"xxx；"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这是可以的")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"MyEvent"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"xxx; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这也是可以的")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"MyEvent "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," xxx; "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这不可以")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[140]||(s[140]=i("h3",{id:"action-和-func的实质",tabindex:"-1"},[l("Action 和 Func的实质 "),i("a",{class:"header-anchor",href:"#action-和-func的实质","aria-label":'Permalink to "Action 和 Func的实质"'},"​")],-1)),s[141]||(s[141]=i("p",null,[l("Action就是一个"),i("strong",null,"无返回值"),l("的，接受0-16个参数的委托。")],-1)),s[142]||(s[142]=i("p",null,[i("code",null,"public delegate void Action();")],-1)),s[143]||(s[143]=i("p",null,[i("code",null,"public delegate void Action(T obj);")],-1)),s[144]||(s[144]=i("p",null,[i("code",null,"public delegate void Action(T1 arg1, T2 arg2);")],-1)),s[145]||(s[145]=i("p",null,[l("而Func就是一个"),i("strong",null,"有返回值"),l("的Action。")],-1)),s[146]||(s[146]=i("p",null,[i("code",null,"public delegate TResult Func();")],-1)),s[147]||(s[147]=i("p",null,[i("code",null,"public delegate TResult Func(T arg);")],-1)),s[148]||(s[148]=i("p",null,[i("code",null,"public delegate TResult Func(T1 arg1, T2 arg2);")],-1)),s[149]||(s[149]=i("p",null,[i("em",null,"in、out关键字：")],-1)),s[150]||(s[150]=i("p",null,[i("em",null,"in: 该参数不会被 函数修改 out：该参数会被 传输至函数外")],-1)),s[151]||(s[151]=i("h2",{id:"字段-field、属性-property",tabindex:"-1"},[l("字段 Field、属性 Property "),i("a",{class:"header-anchor",href:"#字段-field、属性-property","aria-label":'Permalink to "字段 Field、属性 Property"'},"​")],-1)),s[152]||(s[152]=i("p",null,[l("字段是类中的成员变量，"),i("code",null,"private int speed = 5;")],-1)),s[153]||(s[153]=i("p",null,"很多时候，我们不希望其他类直接访问我们的字段。或者我们希望每次访问一个字段时可以做一点事。 属性（Property）提供了这个功能。",-1)),s[154]||(s[154]=i("p",null,"属性可以理解为一个对字段的封装，它能给一个字段添加一些功能：比如读写限制、读 写时执行函数等等。 一个属性具有两个组成部分：getter与setter。它们分别定义了读、写该属性的行为：",-1)),s[155]||(s[155]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," speed"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//事实上什么也没做")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	get{"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," speed;}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	set{speed "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," value;}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//属性变量通常用于保护一个字段，为一个私有变量提供一个经过封装的公开访问通道。比如这里的Speed实则是一个对speed的封装。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[156]||(s[156]=i("h3",{id:"属性-getter",tabindex:"-1"},[l("属性：Getter "),i("a",{class:"header-anchor",href:"#属性-getter","aria-label":'Permalink to "属性：Getter"'},"​")],-1)),s[157]||(s[157]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," speed"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	get{"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," speed;}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[158]||(s[158]=i("p",null,[l("属性的Getter定义了读取该属性的行为。Getter必须有返回值。 它看上去就像调用了一个函数并将函数的返回值给读取者。 语法："),i("code",null,"get{<函数语句>}")],-1)),s[159]||(s[159]=i("p",null,"Getter的存在允许我们自定义读取某变量时的行为，它增加了类的安全性与可读性。",-1)),s[160]||(s[160]=i("h3",{id:"属性-setter",tabindex:"-1"},[l("属性：Setter "),i("a",{class:"header-anchor",href:"#属性-setter","aria-label":'Permalink to "属性：Setter"'},"​")],-1)),s[161]||(s[161]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"private"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," speed"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	set{speed "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," value;}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[162]||(s[162]=i("p",null,[l("属性的Setter定义了写入该属性的行为。Setter有一个看不见的参数 “value”。value代表我们要写入的那个值。 它看上去就像调用了一个函数并将在函数中修改了字段。 语法："),i("code",null,"set{<函数语句>")],-1)),s[163]||(s[163]=i("h3",{id:"自动属性",tabindex:"-1"},[l("自动属性 "),i("a",{class:"header-anchor",href:"#自动属性","aria-label":'Permalink to "自动属性"'},"​")],-1)),s[164]||(s[164]=i("p",null,[i("code",null,"public int Speed { get; set; }")],-1)),s[165]||(s[165]=i("p",null,"与其写出完整的getter和setter，我们只需要写get;set;就可以自动获得默认的getter和 setter。",-1)),s[166]||(s[166]=i("p",null,"通过这种方式，我们可以轻易地控制一个属性的可读/写性。",-1)),s[167]||(s[167]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//可读，不可写")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ get; }")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//可读，但只有本类可写")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ get; "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"private"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Speed"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//可读，但只有本类和子类可写")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ get; "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"protected"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//属性不可以为“可写但不可读”。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[168]||(s[168]=i("h2",{id:"接口-interface",tabindex:"-1"},[l("接口 Interface "),i("a",{class:"header-anchor",href:"#接口-interface","aria-label":'Permalink to "接口 Interface"'},"​")],-1)),s[169]||(s[169]=i("p",null,[l("接口（Interface）定义了一系列类的规范。接口中可以包括"),i("strong",null,"方法"),l("、"),i("strong",null,"属性"),l("、"),i("strong",null,"事件"),l("等成员，而这些成员"),i("strong",null,"必须"),l("被其子类实现。")],-1)),s[170]||(s[170]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," interface"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IDamageable")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," hp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";} "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//属性：生命值")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," OnDamage"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," value"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//方法：受击")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[171]||(s[171]=i("p",null,"接口很像是一个“未完成的类”。在定义方法时，我们完全不用 （也不可以）写方法的主体；",-1)),s[172]||(s[172]=i("p",null,[l("在定义属性时，我们也"),i("strong",null,"不可以"),l("给其赋予初始值。 它只是一个“接口”，等待子类接入并真正实现这些成员，以此来确保"),i("strong",null,"所有"),l("的子类都有这些实现。")],-1)),s[173]||(s[173]=i("p",null,"和一般的类一样，我们可以让一个类继承自接口。与类不同的是，我们可以继承自多个接口。",-1)),s[174]||(s[174]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Enemy"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IDamageable"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IHittable")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"	//这里必须实现所有接口的成员，否则会报错！")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[175]||(s[175]=i("p",null,"实现一个接口相当于补充接口中所有属性与方法的实现。",-1)),s[176]||(s[176]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," interface"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IDamageable")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," hp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";} "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//属性：生命值")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," OnDamage"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," value"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//方法：受击")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Enemy"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IDamageable")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," hp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; }")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," OnDamage"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," value"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		hp"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"value;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}	")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//Enemy类实现了接口中所有的属性与方法。这是必须完成的任务。")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[177]||(s[177]=i("h2",{id:"部分类-partial-class",tabindex:"-1"},[l("部分类 Partial Class "),i("a",{class:"header-anchor",href:"#部分类-partial-class","aria-label":'Permalink to "部分类 Partial Class"'},"​")],-1)),s[178]||(s[178]=i("p",null,"部分类允许我们把同一个类写在多个文件里，每个文件提供类的一部分。 定义时使用partial关键字。",-1)),s[179]||(s[179]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//Map.cs")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," partial"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Map")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	private"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," hp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"set"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; }")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//MapAddHp.cs")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," partial"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Map")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	public"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AddHP"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," value"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    {")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		hp "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," value;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}	")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//Map类被定义在了两个文件中，但其实际的功能和直接写在一起是一样的")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[180]||(s[180]=i("h2",{id:"lambda-表达式",tabindex:"-1"},[l("Lambda 表达式 "),i("a",{class:"header-anchor",href:"#lambda-表达式","aria-label":'Permalink to "Lambda 表达式"'},"​")],-1)),s[181]||(s[181]=i("p",null,"Lambda表达式是一种允许我们“快速定义函数”的方法。可以把一个lambda表达式想象成一个简易函数。",-1)),s[182]||(s[182]=i("h3",{id:"expression-lambda",tabindex:"-1"},[l("expression lambda "),i("a",{class:"header-anchor",href:"#expression-lambda","aria-label":'Permalink to "expression lambda"'},"​")],-1)),s[183]||(s[183]=i("p",null,[i("code",null,"(参数列表) => (返回的表达式)"),l("比如"),i("code",null,"（x,y）=>x*y")],-1)),s[184]||(s[184]=i("p",null,"上方右侧表达式的含义和这个函数类似：",-1)),s[185]||(s[185]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," MyFunc"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," x"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"T"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," y"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{ ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," x"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"*"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y;")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[186]||(s[186]=i("p",null,"注意lambda表达式是没有函数名的， 所以也被称为匿名函数。",-1)),s[187]||(s[187]=i("p",null,[l("使用lambda表达式时把它当作一个"),i("strong",null,"委托类型的变量"),l("即可,比如"),i("code",null,"(x,y)=>x*y"),l("就可以是类型为"),i("code",null,"Func<int,int,int>"),l("的变量。所以我们可以这么写："),i("code",null,"Func<int,int,int> mul = (x,y) => x*y;")],-1)),s[188]||(s[188]=i("h3",{id:"statement-lambda",tabindex:"-1"},[l("statement lambda "),i("a",{class:"header-anchor",href:"#statement-lambda","aria-label":'Permalink to "statement lambda"'},"​")],-1)),s[189]||(s[189]=i("p",null,"statement lambda可以没有返回值。",-1)),s[190]||(s[190]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"参数列表"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	执行的程序语句")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eg.")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(go) ="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	go."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SetActive"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这里写任何语句都可以")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[191]||(s[191]=i("p",null,"一个没有返回值的statement lambda可以理解成一个Action类型的变量。",-1)),s[192]||(s[192]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Action"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"string"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"greet"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," name"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," =>")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	string"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," greeting"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Hello {name}!"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	Console."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"WriteLine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(greeting);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"greet"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"World"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//output:HelloWorld")])])]),i("button",{class:"code-block-unfold-btn"})],-1)),s[193]||(s[193]=i("h3",{id:"作为参数的函数",tabindex:"-1"},[l("作为参数的函数 "),i("a",{class:"header-anchor",href:"#作为参数的函数","aria-label":'Permalink to "作为参数的函数"'},"​")],-1)),s[194]||(s[194]=i("p",null,"有了lambda表达式后，我们就可以轻松地把函数作为参数传入其他函数了！ 只需定义一个Action/Func参数即可。",-1)),s[195]||(s[195]=i("div",{class:"language-c#"},[i("button",{title:"Copy code",class:"copy"}),i("span",{class:"lang"},"c#"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"IEnumerator"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," DelayedCall"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Action"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," action"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"float"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," seconds"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"	yield"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," WaitForSeconds"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(seconds);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	action"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//这样调用")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"StartCoroutine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DelayedCall"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(() "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	Destroy"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(gameObject);")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2.0f"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"));")])])]),i("button",{class:"code-block-unfold-btn"})],-1))]),"main-header":a(()=>[k(t.$slots,"main-header")]),"main-header-after":a(()=>[k(t.$slots,"main-header-after")]),"main-nav":a(()=>[k(t.$slots,"main-nav")]),"main-content-before":a(()=>[k(t.$slots,"main-content-before")]),"main-content":a(()=>[k(t.$slots,"main-content")]),"main-content-after":a(()=>[k(t.$slots,"main-content-after")]),"main-nav-before":a(()=>[k(t.$slots,"main-nav-before")]),"main-nav-after":a(()=>[k(t.$slots,"main-nav-after")]),comment:a(()=>[k(t.$slots,"comment")]),footer:a(()=>[k(t.$slots,"footer")]),aside:a(()=>[k(t.$slots,"aside")]),"aside-custom":a(()=>[k(t.$slots,"aside-custom")]),default:a(()=>[k(t.$slots,"default")]),_:3},8,["frontmatter"])}}};export{R as default,m as usePageData};
