import{_ as p}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.UeO0aKI3.js";import"./chunks/pinia.BFamNAX0.js";import{e as g,u as E,a as c}from"./chunks/vue-router.CLlYW99z.js";import{a7 as y,an as s,X as m,a8 as F,am as n,af as l,aj as i,Z as b}from"./framework.DIdR4KMW.js";import"./app.D31Dy1By.js";import"./chunks/dayjs.BdcnXKr1.js";import"./chunks/vue-i18n.C-hb0qar.js";/* empty css                    */import"./chunks/nprogress.B6x19dEb.js";import"./content.DZLhsl5J.js";import"./router.-rV2tM5K.js";const f=g("/posts/LuaDepth",async t=>JSON.parse('{"title":"LuaDepth","description":"","frontmatter":{"title":"LuaDepth","date":"2025-04-25 15:11:10","categories":"Depth","tags":["Lua"],"toc":true},"headers":[],"relativePath":"pages/posts/LuaDepth.md","lastUpdated":1761835150000}'),{lazy:(t,e)=>t.name===e.name}),U={__name:"LuaDepth",setup(t,{expose:e}){const{data:r}=f(),u=c(),d=E(),h=Object.assign(d.meta.frontmatter||{},r.value?.frontmatter||{});return u.currentRoute.value.data=r.value,b("valaxy:frontmatter",h),globalThis.$frontmatter=h,e({frontmatter:{title:"LuaDepth",date:"2025-04-25 15:11:10",categories:"Depth",tags:["Lua"],toc:!0}}),(a,k)=>{const o=p;return F(),y(o,{frontmatter:m(h)},{"main-content-md":s(()=>[...k[0]||(k[0]=[l("h1",{id:"协程",tabindex:"-1"},[i("协程 "),l("a",{class:"header-anchor",href:"#协程","aria-label":'Permalink to "协程"'},"​")],-1),l("p",null,"线程：抢占式多任务机制，是一个相对独立的、可调度的执行单元，是系统独立调度和分配CPU的基本单位。它由操作系统来决定执行哪个任务，在运行过程中需要调度，休眠挂起，上下文切换等系统开销，而且最关键还要使用同步机制保证多线程的运行结果正确",-1),l("p",null,"协程：协作式多任务机制，协程之间通过函数调用来完成一个既定的任务。它由程序自己决定执行哪个任务，只涉及到控制权的交换（通过resume-yield），同一时刻只有一个协程在运行，而且无法外部停止。通俗来说，协程就是可以用同步的方式，写出异步的代码",-1),l("p",null,"协程（Coroutine）拥有4种状态：",-1),l("ul",null,[l("li",null,"运行（running）如果在协程的函数中调用status，传入协程自身的句柄，那么执行到这里的时候才会返回运行状态"),l("li",null,"挂起（suspended）调用了yeild或还没开始运行，那么就是挂起状态"),l("li",null,"正常（normal）如果协程A重启协程B时，协程A处于的状态为正常状态"),l("li",null,"停止（dead）如果一个协程发生错误结束，或正常终止。那么就处于死亡状态（不可以再重启）")],-1),l("p",null,"Lua的协程是一种非对称式协程，又或叫半协程，因为它提供了两种传递程序控制权的操作：1. 重启调用协程，通过coroutine.resume实现；2. 挂起协程并将程序控制权返回给协程的调用者，即通过coroutine.yield实现。对称式协程，只有一种传递程序控制权的操作，即将控制权直接传递给指定的协程",-1),l("p",null,"协程（Coroutine）具有两个非常重要的特性：1. 私有数据在协程间断式运行期间一直有效；2. 协程每次yield后让出控制权，下次被resume后从停止点开始继续执行",-1),l("h1",{id:"闭包",tabindex:"-1"},[i("闭包 "),l("a",{class:"header-anchor",href:"#闭包","aria-label":'Permalink to "闭包"'},"​")],-1),l("p",null,"把函数原型换成类，把闭包换成对象。一切就都可以解释了，无论什么时候，把一个函数原型赋值给一个变量时，Lua都会将这个函数原型实例化为一个闭包对象，无论这个闭包对象是否真的用到了所谓的上值表。当在Lua中调用函数或者传递函数对象时，都是在传递闭包对象，而非传递函数原型。 所以说白了，闭包就是函数原型的一个实例 所以它为什么叫闭包呢？就是因为当实例化一个函数原型为一个闭包时，这个函数原型已经捕获到了自己需要所有的上值对象，此后不会再进行任何其他捕获行为。它形成了一个自洽的体系，有自己内部的常量表，上值表，变量表。 这就是Lua的闭包机制，一种用到了OOP思想的机制。",-1),l("ol",null,[l("li",null,"Upvalues是在函数闭包生成的时候（运行到function时）绑定的"),l("li",null,"Upvalues在闭包还没关闭前（即函数返回前），是对栈的引用，这样做的目的是可以在函数里修改对应的值从而修改Upvalues的值"),l("li",null,"闭包关闭后（即函数退出后），Upvalues不再是指针，而是值")],-1),l("h1",{id:"userdata",tabindex:"-1"},[i("userdata "),l("a",{class:"header-anchor",href:"#userdata","aria-label":'Permalink to "userdata"'},"​")],-1),l("p",null,"userdata本身只是一个指针(light userdata)，或一块受Lua管理的内存块(full userdata)，它没有任何预定义行为，在Lua看来它就是一个值，你需要提供配套的C函数去操作它。一般可以用一个对应的元表来判断userdata的类型，以及用一些方法操作userdata的属性",-1),l("h1",{id:"json",tabindex:"-1"},[i("Json "),l("a",{class:"header-anchor",href:"#json","aria-label":'Permalink to "Json"'},"​")],-1),l("h2",{id:"_1-高效的内存管理",tabindex:"-1"},[i("1. 高效的内存管理 "),l("a",{class:"header-anchor",href:"#_1-高效的内存管理","aria-label":'Permalink to "1. 高效的内存管理"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"预分配内存策略"),i(": 使用 "),l("code",null,"membuffer"),i(" 结构管理缓冲区，提前分配足够空间 ("),l("code",null,"membuffer_ensure_space"),i(")，避免频繁重分配")]),l("li",null,[l("strong",null,"内存复用"),i(": 尽可能复用内存缓冲区，减少内存分配次数")]),l("li",null,[l("strong",null,"零拷贝优化"),i(": 直接在缓冲区构建结果，避免中间字符串拷贝")])],-1),l("h2",{id:"_2-优化的解析技术",tabindex:"-1"},[i("2. 优化的解析技术 "),l("a",{class:"header-anchor",href:"#_2-优化的解析技术","aria-label":'Permalink to "2. 优化的解析技术"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"高效分派"),i(": 使用 switch-case 和查表法代替条件分支")]),l("li",null,[l("strong",null,"内联优化"),i(": 关键函数使用 "),l("code",null,"inline"),i("，减少函数调用开销")]),l("li",null,[l("strong",null,"分支预测"),i(": 使用 "),l("code",null,"likely"),i(" 和 "),l("code",null,"unlikely"),i(" 宏优化 CPU 分支预测")]),l("li",null,[l("strong",null,"快速路径"),i(": 常见情况直接处理，避免通用路径的开销")])],-1),l("h2",{id:"_3-数值处理专项优化",tabindex:"-1"},[i("3. 数值处理专项优化 "),l("a",{class:"header-anchor",href:"#_3-数值处理专项优化","aria-label":'Permalink to "3. 数值处理专项优化"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"整数/浮点分离处理"),i(": 对整数和浮点数采用不同的处理路径")]),l("li",null,[l("strong",null,"延迟转换"),i(": 尽量保持整数形式，只在必要时转为浮点数")]),l("li",null,[l("strong",null,"定界检测"),i(": 通过 "),l("code",null,"MAXBY10"),i(" 和 "),l("code",null,"MAXLASTD"),i(" 常量快速判断整数边界")]),l("li",null,[l("strong",null,"幂运算优化"),i(": 使用预计算的 "),l("code",null,"powersOf10"),i(" 表加速指数部分计算")])],-1),l("h2",{id:"_4-字符串处理优化",tabindex:"-1"},[i("4. 字符串处理优化 "),l("a",{class:"header-anchor",href:"#_4-字符串处理优化","aria-label":'Permalink to "4. 字符串处理优化"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"转义表"),i(": 使用预构建的查表法处理字符转义 ("),l("code",null,"char2escape"),i(" 和 "),l("code",null,"escape2char"),i(")")]),l("li",null,[l("strong",null,"直接缓冲区操作"),i(": 使用 "),l("code",null,"_unsafe"),i(" 系列函数在保证安全的情况下跳过边界检查")]),l("li",null,[l("strong",null,"UTF8/16 高效编码"),i(": 针对 Unicode 编码进行了特殊优化")])],-1),l("h2",{id:"_5-智能表处理",tabindex:"-1"},[i("5. 智能表处理 "),l("a",{class:"header-anchor",href:"#_5-智能表处理","aria-label":'Permalink to "5. 智能表处理"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"数组/对象智能判断"),i(": 根据数据特征自动识别是数组还是对象")]),l("li",null,[l("strong",null,"空表优化"),i(": 对空表进行特殊处理，可配置为数组或对象")]),l("li",null,[l("strong",null,"表遍历优化"),i(": 减少表遍历中的 Lua API 调用次数")])],-1),l("h2",{id:"_6-底层-lua-api-优化",tabindex:"-1"},[i("6. 底层 Lua API 优化 "),l("a",{class:"header-anchor",href:"#_6-底层-lua-api-优化","aria-label":'Permalink to "6. 底层 Lua API 优化"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"栈操作优化"),i(": 最小化 Lua 栈操作，减少入栈/出栈开销")]),l("li",null,[l("strong",null,"直接数据访问"),i(": 直接与 Lua 数据类型交互，避免不必要的类型转换")]),l("li",null,[l("strong",null,"预分配栈空间"),i(": 使用 "),l("code",null,"luaL_checkstack"),i(" 提前确保足够的栈空间")])],-1),l("h2",{id:"_7-其他技术优化",tabindex:"-1"},[i("7. 其他技术优化 "),l("a",{class:"header-anchor",href:"#_7-其他技术优化","aria-label":'Permalink to "7. 其他技术优化"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"基于事件回调"),i(": 使用事件回调机制分离解析和构建逻辑")]),l("li",null,[l("strong",null,"深度控制"),i(": 防止过深嵌套导致的栈溢出")]),l("li",null,[l("strong",null,"条件编译"),i(": 根据需要开启格式化或注释支持")])],-1),l("p",null,"这些优化使得 LuaExtend JSON 实现在各种场景下都能保持高性能，尤其在处理大型 JSON 数据或高频解析/序列化场景中优势更加明显。",-1),l("h1",{id:"list",tabindex:"-1"},[i("List "),l("a",{class:"header-anchor",href:"#list","aria-label":'Permalink to "List"'},"​")],-1),l("p",null,"如下面这样的代码：",-1),l("div",{class:"language-lua"},[l("button",{title:"Copy code",class:"copy"}),l("span",{class:"lang"},"lua"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[l("code",{"v-pre":""},[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"local"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," t "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {}")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"local"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tinsert "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," table.insert")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"for"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1000"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," do")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    tinsert"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(t, i)")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"end")])])]),l("button",{class:"code-block-unfold-btn"})],-1),l("p",null,"上面的代码还可以再优化成这样：",-1),l("div",{class:"language-lua"},[l("button",{title:"Copy code",class:"copy"}),l("span",{class:"lang"},"lua"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[l("code",{"v-pre":""},[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"local"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," t "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {}")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"for"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1000"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," do")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    t["),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"end")])])]),l("button",{class:"code-block-unfold-btn"})],-1),l("p",null,[i("这减少了一次"),l("code",null,"C API"),i("的调用，性能会快一点点。")],-1),l("p",null,[i("看起来"),l("code",null,"#t"),i("并不是立即返回数组长度，而是做了更耗时的操作，翻开"),l("code",null,"Lua"),i("的源码，相关的函数是：")],-1),l("div",{class:"language-c"},[l("button",{title:"Copy code",class:"copy"}),l("span",{class:"lang"},"c"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[l("code",{"v-pre":""},[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"lua_Unsigned "),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"luaH_getn"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (Table "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"*"),l("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"t"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  unsigned"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," j "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," t->sizearray;")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (j "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &&"),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ttisnil"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t->array[j "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"])) {")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    /* there is a boundary in the array part: (binary) search for it */")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    unsigned"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    while"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (j "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      unsigned"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," m "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (i"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"j)"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"/"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      if"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ttisnil"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t->array[m "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"])) j "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," m;")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      else"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," m;")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i;")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  /* else must find a boundary in hash part */")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  else"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," if"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"isdummy"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(t)) {"),l("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  /* hash part is empty? */")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," j;"),l("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  /* that is easy... */")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  else"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"       return"),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," unbound_search"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(t, j);")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),l("button",{class:"code-block-unfold-btn"})],-1),l("p",null,[i("问题就在"),l("code",null,"if (j > 0 && ttisnil(&t->array[j - 1]))"),i("这一段，如果数组部分最后一个元素是"),l("code",null,"nil"),i("，那么就用二分查找找到最后不是"),l("code",null,"nil"),i("的元素，返回这个索引。")],-1),l("p",null,[i("我们不断地往Table增加数据时，数组部分会动态地按2的幂扩充，比如现在数组长度是2，再加一个值，数组就动态扩充成4，后面再扩充成8，16…，多出来的槽位填充为nil。所以除非数组刚好满了，否则"),l("code",null,"#t"),i("都会用二分查找来确定长度。时间复杂度一样子从"),l("code",null,"O(1)"),i("变成了"),l("code",null,"O(logN)"),i("。这样分析下来，甚至比Python慢也是可以理解了。")],-1),l("p",null,[i("这个问题的根源，我认为是"),l("code",null,"Lua"),i("把哈希表和数组融合在一起，很多对数组的操作，也不得不考虑哈希部分；而且在rehash的时候，数据经常在数组和哈希表转移。这种融合在我看来一点好处都没有：增加了Table代码的复杂度，且很难针对数组的操作作出更优化的写法。比如没有办法提供数组的精确长度，只能通过二分查找找到最右边的非空元素。")],-1),l("p",null,[i("在"),l("code",null,"Lua"),i("中，把Table当成数组操作，是会比其他语言承担更多的性能开销的。")],-1),l("ul",null,[l("li",null,[l("p",null,[l("strong",null,"用户数据设计"),i("：使用 "),l("code",null,"lua_newuserdata"),i(" 创建 C 结构体，配合元表实现对象化")])]),l("li",null,[l("p",null,[l("strong",null,"引用系统"),i("：通过自定义引用表管理 Lua 值的存储，避免 GC 问题")])]),l("li",null,[l("p",null,[l("strong",null,"元表机制"),i("：每个模块定义专有元表和元方法，支持面向对象语法")])]),l("li",null,[l("p",null,[l("strong",null,"类型检查与转换"),i("：使用 "),l("code",null,"luaL_check*"),i(" 系列函数确保类型安全")])]),l("li",null,[l("p",null,[l("strong",null,"动态扩容"),i("：如列表/队列等动态数据结构实现自动扩容算法")])]),l("li",null,[l("p",null,[l("strong",null,"内存复用"),i("：尽可能复用内存，减少分配/释放次数")])]),l("li",null,[l("p",null,[l("strong",null,"安全释放"),i("：使用 "),l("code",null,"__gc"),i(" 元方法确保资源自动释放")])]),l("li",null,[l("p",null,[l("strong",null,"定制内存分配器"),i("：通过 "),l("code",null,"_malloc"),i("/"),l("code",null,"_realloc"),i("/"),l("code",null,"_free"),i(" 封装内存操作")])])],-1),l("h1",{id:"序列化",tabindex:"-1"},[i("序列化 "),l("a",{class:"header-anchor",href:"#序列化","aria-label":'Permalink to "序列化"'},"​")],-1),l("h2",{id:"_1-高效的序列化方案",tabindex:"-1"},[i("1. 高效的序列化方案 "),l("a",{class:"header-anchor",href:"#_1-高效的序列化方案","aria-label":'Permalink to "1. 高效的序列化方案"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"优化的二进制格式设计"),i("：使用 type+cookie 8位字节高效编码类型信息")]),l("li",null,[l("strong",null,"自适应数值编码"),i("：根据数值范围自动选择 int8/16/32/64，节省空间")]),l("li",null,[l("strong",null,"表结构优化"),i("：分离数组部分和哈希部分，减少序列化体积")]),l("li",null,[l("strong",null,"递归深度控制"),i("：通过 MAX_DEPTH 参数防止栈溢出")]),l("li",null,[l("strong",null,"可讨论点"),i("：与 JSON/MessagePack 相比的性能优势")])],-1),l("h2",{id:"_2-内存管理策略",tabindex:"-1"},[i("2. 内存管理策略 "),l("a",{class:"header-anchor",href:"#_2-内存管理策略","aria-label":'Permalink to "2. 内存管理策略"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"内存分配最小化"),i("：使用固定初始缓冲区(INIT_BUFF_SIZE)减少小对象分配")]),l("li",null,[l("strong",null,"智能扩容算法"),i("：缓冲区动态扩容时采用倍增策略，平衡性能与内存使用")]),l("li",null,[l("strong",null,"内存复用机制"),i("：尽可能重用已分配内存，避免频繁分配/释放")]),l("li",null,[l("strong",null,"可讨论点"),i("：在内存受限环境中的优化思路")])],-1),l("h2",{id:"_3-跨平台兼容性",tabindex:"-1"},[i("3. 跨平台兼容性 "),l("a",{class:"header-anchor",href:"#_3-跨平台兼容性","aria-label":'Permalink to "3. 跨平台兼容性"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"字节序处理"),i("：通过 nativeendian 智能检测并处理大小端差异")]),l("li",null,[l("strong",null,"整数跨平台表示"),i("：处理不同平台整数位宽差异")]),l("li",null,[l("strong",null,"可讨论点"),i("：如何确保数据在异构系统间安全传输")])],-1),l("h2",{id:"_4-c-lua-接口设计",tabindex:"-1"},[i("4. C/Lua 接口设计 "),l("a",{class:"header-anchor",href:"#_4-c-lua-接口设计","aria-label":'Permalink to "4. C/Lua 接口设计"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"面向对象包装"),i("：使用元表机制提供自然的 OOP 接口")]),l("li",null,[l("strong",null,"引用系统"),i("：通过引用表机制安全管理 Lua 对象生命周期")]),l("li",null,[l("strong",null,"统一命名空间"),i("：所有模块使用 LuaExtendLib 前缀，避免命名冲突")]),l("li",null,[l("strong",null,"可讨论点"),i("：如何平衡接口易用性与底层性能")])],-1),l("h2",{id:"_5-性能优化技术",tabindex:"-1"},[i("5. 性能优化技术 "),l("a",{class:"header-anchor",href:"#_5-性能优化技术","aria-label":'Permalink to "5. 性能优化技术"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"内联关键函数"),i("：使用 inline 避免高频调用开销")]),l("li",null,[l("strong",null,"自定义内存分配"),i("：通过 _malloc/_realloc/_free 封装，便于优化和跟踪")]),l("li",null,[l("strong",null,"底层优化"),i("：如 JSON 解析器中的字符级优化和查表法处理")]),l("li",null,[l("strong",null,"算法优化"),i("：如快速排序、二分查找等高效算法实现")]),l("li",null,[l("strong",null,"可讨论点"),i("：性能瓶颈分析方法和优化策略")])],-1)])]),"main-header":s(()=>[n(a.$slots,"main-header")]),"main-header-after":s(()=>[n(a.$slots,"main-header-after")]),"main-nav":s(()=>[n(a.$slots,"main-nav")]),"main-content-before":s(()=>[n(a.$slots,"main-content-before")]),"main-content":s(()=>[n(a.$slots,"main-content")]),"main-content-after":s(()=>[n(a.$slots,"main-content-after")]),"main-nav-before":s(()=>[n(a.$slots,"main-nav-before")]),"main-nav-after":s(()=>[n(a.$slots,"main-nav-after")]),comment:s(()=>[n(a.$slots,"comment")]),footer:s(()=>[n(a.$slots,"footer")]),aside:s(()=>[n(a.$slots,"aside")]),"aside-custom":s(()=>[n(a.$slots,"aside-custom")]),default:s(()=>[n(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{U as default,f as usePageData};
