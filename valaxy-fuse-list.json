[{"title":"","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"","link":"/404","cover":"","date":""},{"title":"关于我","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"\n<div class=\"text-center\">\n\n# Hi there \n\n> Tell me... Does **whisper3zzz the God** bleed?\n>\n> \n> No.","link":"/about","cover":"","date":""},{"title":"关于站点","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"\nValaxy + valaxy-theme-yun Demo Site\n\n- Default Theme: [valaxy-theme-yun](https://github.com/YunYouJ","link":"/about/site","cover":"","date":""},{"title":"分类","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"","link":"/categories","cover":"https://wrxinyue-images.s3.bitiful.net/pc-wallpaper/d55e3995642b80318211a82e39f09a68.gif","date":""},{"title":"归档","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"","link":"/archives","cover":"https://wrxinyue-images.s3.bitiful.net/pc-wallpaper/d3451fd5c958008e3798970d3dc2c4ee.gif","date":""},{"title":"友链版","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"","link":"/links","cover":"https://f866f87.webp.li/%E5%A3%81%E7%BA%B836.jpg","date":""},{"title":"LuaDepth","tags":["Lua"],"categories":["Depth"],"author":"whisper3zzz","excerpt":"\n# 协程\n\n线程：抢占式多任务机制，是一个相对独立的、可调度的执行单元，是系统独立调度和分配CPU的基本单位。它由操作系统来决定执行哪个任务，在运行过程中需要调度，休眠挂起，上下文切换等系统开销，而","link":"/posts/LuaDepth","cover":"","date":"2025-04-25 15:11:10"},{"title":"UniTask","tags":["Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"","link":"/posts/UniTask","cover":"","date":"2024-03-24 14:18:00"},{"title":"Unity粒子系统（1）","tags":["Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n# 一、粒子系统概述\n\n小型效果诸如击中特效，火焰特效等使用内置粒子系统即可，对于更加绚丽，需要粒子数量更多的，诸如雨雪天气，大爆炸之类的可酌情使用VFX（Visual Effect Graph粒子系统）。\n\n","link":"/posts/Unity%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%EF%BC%881%EF%BC%89","cover":"","date":"2023-12-20 22:04:18"},{"title":"Unity粒子系统（2）","tags":["Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n# 粒子系统主模块\n\n","link":"/posts/Unity%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%EF%BC%882%EF%BC%89","cover":"","date":"2023-12-20 22:04:18"},{"title":"transform.forward和Vector3.forward的区别","tags":["Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\ntransform.forward：其值是物体局部坐标的Z轴在世界坐标的指向，不一定是（0,0,1）。\n\nVector3.forward：其值永远等于（0,0,1），是世界坐标，是不变的。\n","link":"/posts/transform-forward%E5%92%8CVector3-forward%E7%9A%84%E5%8C%BA%E5%88%AB","cover":"","date":"2024-01-21 20:49:53"},{"title":"xLua热更新","tags":["热更新","Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n# xLua的新功能-HotFix\n\n优势：\n\n开发时使用C#，打好hotfix标签，出现问题时再使用lua修复，大版本更新时将lua部分更新回C#。\n\n劣势：\n\n- 热修复复杂脚本的难度：\n  -","link":"/posts/xLua%E7%83%AD%E6%9B%B4%E6%96%B0","cover":"","date":"2024-08-05 14:37:59"},{"title":"从IEnumerator到UnityCoroutine——Unity协程的背后原理","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"\n## 在Unity中使用协程\n\n在最开始做游戏的时候，我们经常会遇到这种需求：玩家死亡之后玩家应该逐渐消失而非瞬间消失。玩家死亡很简单，我们按照最开始初学者的思路，死亡直接调用`Destroy(ga","link":"/posts/%E4%BB%8EIEnumerator%E5%88%B0UnityCoroutine%E2%80%94%E2%80%94Unity%E5%8D%8F%E7%A8%8B%E7%9A%84%E8%83%8C%E5%90%8E%E5%8E%9F%E7%90%86","cover":"","date":"2024-11-29 21:02:59"},{"title":"如何定位Unity编辑器崩溃问题","tags":["Unity"],"categories":[],"author":"whisper3zzz","excerpt":"\n在`C:\\Users\\{username}\\AppData\\Local\\Unity\\Editor`文件夹中，Editor.log文件是当前编辑器的控制台输出，Editor-prev.log是上一次编","link":"/posts/%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8DUnity%E7%BC%96%E8%BE%91%E5%99%A8%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98","cover":"","date":"2024-06-15 20:13:28"},{"title":"射线和射线检测","tags":["Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n碰撞检测可以帮助我们实现诸如抵达某个地点自动触发剧情、判断子弹是否击中玩家等功能，但我如果想要实现如当鼠标悬浮某个人物上，自动弹出该人物信息，要如何判断呢？这时使用碰撞检测会太繁琐了。射线检测可以很好地解决这个问题。\n\n","link":"/posts/%E5%B0%84%E7%BA%BF%E5%92%8C%E5%B0%84%E7%BA%BF%E6%A3%80%E6%B5%8B","cover":"","date":"2024-01-21 19:30:28"},{"title":"","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"","link":"/tags","cover":"https://wrxinyue-images.s3.bitiful.net/pc-wallpaper/d3451fd5c958008e3798970d3dc2c4ee.gif","date":""},{"title":"C#引用参数的修饰符","tags":["C#"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n# **两个常见的简单参数修饰符**\n\n## 1.ref\n\n若要使用 `ref` 参数，方法定义和调用方法均必须显式使用 `ref` 关键字，如下面的示例所示。 （除了在进行 COM 调用时，调用方","link":"/posts/C-%E5%BC%95%E7%94%A8%E5%8F%82%E6%95%B0%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6/C-%E5%BC%95%E7%94%A8%E5%8F%82%E6%95%B0%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6","cover":"","date":"2024-01-21 20:58:04"},{"title":"C#进阶","tags":["C#"],"categories":["学习"],"author":"whisper3zzz","excerpt":"一些高级语法\n\n","link":"/posts/C-%E8%BF%9B%E9%98%B6/C-%E8%BF%9B%E9%98%B6","cover":"","date":"2024-02-14 18:36:04"},{"title":"Unity Shader与图形渲染（1）","tags":["渲染","Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"一些基础的概念\n\n","link":"/posts/Unity%20Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%881%EF%BC%89/Unity%20Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%881%EF%BC%89","cover":"","date":"2024-01-30 13:29:49"},{"title":"Unity ML_Agents_Study","tags":["-Unity -AI"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n## 下载ML-Agents\n\n到官方Github库下载[Release21](https://github.com/Unity-Technologies/ml-agents/releases/ta","link":"/posts/Unity-ML-Agents-Study/Unity-ML-Agents-Study","cover":"","date":"2024-05-20 22:38:13"},{"title":"Unity Shader与图形渲染（2）","tags":["渲染","Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n主要是CG语言语法\n\n","link":"/posts/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%882%EF%BC%89/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%882%EF%BC%89","cover":"","date":"2024-02-20 13:39:11"},{"title":"Unity Shader与图形渲染（3）","tags":["渲染","Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"空间变换与Shader结构\n\n","link":"/posts/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%883%EF%BC%89/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%883%EF%BC%89","cover":"","date":"2024-02-20 15:15:37"},{"title":"Unity Shader与图形渲染（4）","tags":["渲染","Unity"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n颜色、形状、动画\n\n如何在Shader中创建颜色和形状，实现动画效果，屏幕后处理\n\n","link":"/posts/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%884%EF%BC%89/Unity-Shader%E4%B8%8E%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%EF%BC%884%EF%BC%89","cover":"","date":"2024-02-21 11:19:13"},{"title":"协程与数据结构","tags":["C#","数据结构","Unity底层"],"categories":["学习"],"author":"whisper3zzz","excerpt":"Unity协程原理、基础的数据结构知识，还有一点图算法（DFS和BFS）\n\n","link":"/posts/%E5%8D%8F%E7%A8%8B%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%8F%E7%A8%8B%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84","cover":"","date":"2024-02-19 13:48:51"},{"title":"漫谈跨语言调用","tags":[],"categories":[],"author":"whisper3zzz","excerpt":"\n","link":"/posts/%E6%BC%AB%E8%B0%88%E8%B7%A8%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8/%E6%BC%AB%E8%B0%88%E8%B7%A8%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8","cover":"","date":"2025-10-29"},{"title":"设计模式、对象池、ECS","tags":["设计模式"],"categories":["学习"],"author":"whisper3zzz","excerpt":"\n设计模式、对象池、ECS\n\n","link":"/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%AF%B9%E8%B1%A1%E6%B1%A0-ECS/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%AF%B9%E8%B1%A1%E6%B1%A0-ECS","cover":"","date":"2024-02-17 14:28:41"}]
